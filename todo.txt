### âœ… Vecka 1 â€“ GrundlÃ¤ggande API med Express

- [x] API:t har minst tre olika routes (endpoints).
- [x] Route `GET /` returnerar API-dokumentation (t.ex. med Express List Endpoints).
- [x] Minst en route returnerar en lista med flera objekt (array).
- [x] Minst en route returnerar ett enskilt objekt (single element).
- [x] API:t fÃ¶ljer RESTful-principer.
- [x] Koden Ã¤r stÃ¤dad och fÃ¶ljer principer fÃ¶r clean code.

#### ğŸ§  Stretch goals

- [x] Routes som returnerar ett enskilt objekt hanterar om objektet inte finns och ger anvÃ¤ndbar information i svaret.
- [ ] Implementera pagination med `.slice()` fÃ¶r stora datamÃ¤ngder, och anvÃ¤nd query-parametrar som `?page=2`.
- [ ] LÃ¤gg till kategori eller taggar fÃ¶r tankar (t.ex. "Food thoughts", "Work thoughts").
- [ ] LÃ¤gg till sortering och filtrering i endpointen som returnerar alla tankar. Exempel:
  - [ ] Sortera pÃ¥ datum eller antal likes.
  - [x] Filtrera pÃ¥ tankar med fler Ã¤n X hjÃ¤rtan.
  - [ ] Filtrera pÃ¥ tankar nyare Ã¤n ett visst datum.
  - [ ] Filtrera pÃ¥ specifika kategorier (om du har implementerat dem).

#### ğŸ›  Tips

- [ ] Testa dina endpoints med Postman.
- [ ] GÃ¶r frekventa commits till GitHub.
- [ ] Kom ihÃ¥g skillnaden mellan:
  - **Path params**: t.ex. `/thoughts/:id`
  - **Query params**: t.ex. `/thoughts?category=work`
